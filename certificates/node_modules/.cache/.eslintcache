[{"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\index.js":"1","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\App.js":"2","C:\\Users\\tammy\\Documents\\GitHub\\project2\\Certificates\\src\\index.js":"3","C:\\Users\\tammy\\Documents\\GitHub\\project2\\Certificates\\src\\App.js":"4","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\AlertCertificates.jsx":"5","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx":"6","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaTres.jsx":"7","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaUm.jsx":"8","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaDois.jsx":"9","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\JS\\cadastro.js":"10","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Hooks\\useErros.js":"11","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaSucess.jsx":"12"},{"size":219,"mtime":1635187544017,"results":"13","hashOfConfig":"14"},{"size":344,"mtime":1635981568556,"results":"15","hashOfConfig":"14"},{"size":219,"mtime":1635187544017,"results":"16","hashOfConfig":"17"},{"size":293,"mtime":1635367422228,"results":"18","hashOfConfig":"17"},{"size":385,"mtime":1635788915812,"results":"19","hashOfConfig":"14"},{"size":1302,"mtime":1636067908737,"results":"20","hashOfConfig":"14"},{"size":5797,"mtime":1636066166888,"results":"21","hashOfConfig":"14"},{"size":10318,"mtime":1636063993851,"results":"22","hashOfConfig":"14"},{"size":3087,"mtime":1636066041002,"results":"23","hashOfConfig":"14"},{"size":772,"mtime":1636002717977,"results":"24","hashOfConfig":"14"},{"size":792,"mtime":1635302064768,"results":"25","hashOfConfig":"14"},{"size":4416,"mtime":1636067590518,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1f9jcn1",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nn28fq",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\index.js",[],["54","55"],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\App.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\Certificates\\src\\index.js",[],["56","57"],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\Certificates\\src\\App.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\AlertCertificates.jsx",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaTres.jsx",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaUm.jsx",["58"],"import React, { useState, useEffect } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport '../CSS/TelaStyle.css';\r\nimport '../CSS/HeaderStyle.css';\r\nimport '../CSS/birthday.css';\r\nimport { Button, Checkbox } from '@material-ui/core';\r\nimport TelaDois from './TelaDois';\r\nimport { validaIdade } from '../JS/cadastro';\r\n\r\n\r\nfunction TelaUm({ aoEnviar }) {\r\n    const [dados, setDados] = useState({\r\n        nome: '',\r\n        nickname: '',\r\n        email: '',\r\n        tel: '',\r\n        aniver: {\r\n            dia: 0,\r\n            mes: 0,\r\n            ano: 0,\r\n        },\r\n        checkbox: false,\r\n    })\r\n\r\n    const setIdade = () => {\r\n        const idade = validaIdade(dados.aniver.dia, dados.aniver.mes, dados.aniver.ano);\r\n        console.log(idade);\r\n        setDados.aniver({\r\n            ...dados.aniver,\r\n            idade: idade,\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('fullName') !== null) {\r\n            let aniver = {\r\n                dia: localStorage.getItem('day'),\r\n                mes: localStorage.getItem('month'),\r\n                ano: localStorage.getItem('year'),\r\n            }\r\n\r\n\r\n            setDados({\r\n                ...dados,\r\n                nome: localStorage.getItem('fullName'),\r\n                nickname: localStorage.getItem('nickName'),\r\n                email: localStorage.getItem('email'),\r\n                tel: localStorage.getItem('phone'),\r\n                aniver,\r\n                checkbox: localStorage.getItem('checkebox'),\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let linkUm = { TelaUm };\r\n    let linkDois = { TelaDois };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"title\">Team Sign Up</h1>\r\n                <nav className=\"navegacao\">\r\n                    <ul>\r\n                        <li className=\"active\"><a href={linkUm}>Basic</a></li>\r\n                        <li><a href={linkDois}>Social</a></li>\r\n                        <li>Certificates</li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <form\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    aoEnviar();\r\n                    localStorage.setItem('nome', dados.nome);\r\n                    localStorage.setItem('nickname', dados.nickname);\r\n                    localStorage.setItem('tel', dados.tel);\r\n                    localStorage.setItem('email', dados.email);\r\n                    localStorage.setItem('dia', dados.aniver.dia);\r\n                    localStorage.setItem('mes', dados.aniver.mes);\r\n                    localStorage.setItem('ano', dados.aniver.ano);\r\n\r\n                }}>\r\n                <label for=\"nome\" className=\"text\" required>Full Name *</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nome\"\r\n                    className=\"inputMax\"\r\n                    required\r\n                    placeholder=\"Jane Doe\"\r\n                    value={dados.nome}\r\n                    name=\"nome\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, nome: event.target.value })\r\n                    }}\r\n                />\r\n\r\n                <label for=\"nickname\" className=\"text\">Nickname</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nickname\"\r\n                    className=\"inputMax\"\r\n                    placeholder=\"Mariazinha\"\r\n                    value={dados.nickname}\r\n                    name=\"nickname\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, nickname: event.target.value })\r\n                    }}\r\n                />\r\n                <div className=\"boxEmailTel box-input\">\r\n                    <div className=\"boxEmail\">\r\n                        <label for=\"inputEmail\" className=\"text\">Email *</label>\r\n                        <input\r\n                            id=\"inputEmail\"\r\n                            type=\"email\"\r\n                            className=\"inputShort\"\r\n                            placeholder=\"mariazinha@email.com\"\r\n                            required\r\n                            value={dados.email}\r\n                            name=\"email\"\r\n                            onChange={(event) => {\r\n                                setDados({ ...dados, email: event.target.value })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxTel\">\r\n                    <label for=\"telefone\" className=\"text align\">Phone</label>\r\n                        <InputMask\r\n                            onBlur={(event) => {\r\n                                setDados({ ...dados, tel: event.target.value })\r\n                            }}\r\n\r\n                            type=\"text\"\r\n                            defaultValue={dados.tel}\r\n                            name='tel'\r\n                            class='inputShort'\r\n                            id='telefone'\r\n                            placeholder='(00) 00000-0000'\r\n                            pattern='\\([0-9]{2}) [0-9]{5}-[0-9]{4}$'\r\n                            mask=\"(99) 99999-9999\">\r\n                        </InputMask>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box-Bday box-input\">\r\n                    <h3 className=\"pbirth\">Birthday *</h3>\r\n                    <div className=\"boxdia\">\r\n                        <label className=\"text\" for=\"dia\">Day</label>\r\n                        <input\r\n                            id=\"dia\"\r\n                            min=\"01\" max=\"31\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{2}\"\r\n                            placeholder=\"01\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.aniver.dia}\r\n                            onChange={(event) => {\r\n                                let aniver = dados.aniver\r\n                                aniver.dia = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxmes\">\r\n                        <label for=\"mes\" className=\"text\">Month</label>\r\n                        <input\r\n                            id=\"mes\"\r\n                            min=\"01\" max=\"12\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{2}\"\r\n                            placeholder=\"01\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.aniver.mes}\r\n                            name=\"nome\"\r\n                            onChange={(event) => {\r\n\r\n                                let aniver = dados.aniver\r\n                                aniver.mes = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxano\">\r\n                        <label for=\"ano\" className=\"text\">Year</label>\r\n                        <input\r\n                            id=\"ano\"\r\n                            min=\"1800\" max=\"2021\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{4}\"\r\n                            placeholder=\"1800\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.ano}\r\n                            name=\"ano\"\r\n                            onChange={(event) => {\r\n\r\n                                let aniver = dados.aniver\r\n                                aniver.ano = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxage\">\r\n                        <label for=\"age\" className=\"text\">Age</label>\r\n                        <input\r\n                            id=\"age\"\r\n                            min=\"0\" max=\"200\"\r\n                            type=\"number\"\r\n                            className=\"inputBday\"\r\n                            disabled\r\n                            name=\"idade\"\r\n                            setIdade={setIdade}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Checkbox\r\n                    id=\"checked\"\r\n                    sx={{\r\n                        marginRight: 3,\r\n                        '& .MuiSvgIcon-root': { fontSize: 28 }\r\n                    }}\r\n                    required\r\n                    value={dados.checkbox}\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, checkbox: event.target.value })\r\n                    }}\r\n                    name=\"checkbox\"\r\n\r\n                />\r\n                <label for=\"checked\" className=\"textCB\">I accept the terms and privacy.</label>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    width=\"sm\"\r\n                    sx={{\r\n                        display: 'block',\r\n                        marginTop: 4,\r\n                        marginLeft: 55,\r\n                        '& .MuiSvgIcon-NavigateNext': { fontSize: 5 }\r\n                    }}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TelaUm;\r\n\r\n\r\n/*\r\n                        <input\r\n                            id=\"telefone\"\r\n                            type=\"tel\"\r\n                            pattern=\"\\([0-9]{2}\\) [0-9]{5}-[0-9]{4}$\"\r\n                            placeholder=\"(00) 00000-0000\"\r\n                            className=\"inputShort\"\r\n                            name=\"tel\"\r\n                            value={dados.tel}\r\n                            onChange={(event) => {\r\n                                setDados({ ...dados, tel: event.target.value })\r\n                            }}\r\n                        />*/","C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaDois.jsx",["59"],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\JS\\cadastro.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Hooks\\useErros.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project2\\certificates\\src\\Components\\Pages\\TelaSucess.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":54,"column":8,"nodeType":"68","endLine":54,"endColumn":10,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":23,"column":10,"nodeType":"68","endLine":23,"endColumn":12,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],["71"],["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dados'. Either include it or remove the dependency array. You can also do a functional update 'setDados(d => ...)' if you only need 'dados' in the 'setDados' call.","ArrayExpression",["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"75","fix":"77"},"Update the dependencies array to be: [dados]",{"range":"78","text":"79"},{"range":"80","text":"79"},[1559,1561],"[dados]",[660,662]]