[{"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\index.js":"1","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\App.js":"2","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx":"3","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaDois.jsx":"4","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaTres.jsx":"5","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaUm.jsx":"6","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaSucess.jsx":"7","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\JS\\calculaIdade.js":"8","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\index.js":"9","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\App.js":"10","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx":"11","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaTres.jsx":"12","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaUm.jsx":"13","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaDois.jsx":"14","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaSucess.jsx":"15","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\JS\\calculaIdade.js":"16"},{"size":220,"mtime":1636128781272,"results":"17","hashOfConfig":"18"},{"size":343,"mtime":1636128090321,"results":"19","hashOfConfig":"18"},{"size":1227,"mtime":1636137294110,"results":"20","hashOfConfig":"18"},{"size":3166,"mtime":1636130603553,"results":"21","hashOfConfig":"18"},{"size":5747,"mtime":1636138240555,"results":"22","hashOfConfig":"18"},{"size":10653,"mtime":1636144118823,"results":"23","hashOfConfig":"18"},{"size":4348,"mtime":1636144719674,"results":"24","hashOfConfig":"18"},{"size":609,"mtime":1636069366391,"results":"25","hashOfConfig":"18"},{"size":220,"mtime":1636128781272,"results":"26","hashOfConfig":"27"},{"size":343,"mtime":1636128090321,"results":"28","hashOfConfig":"27"},{"size":1227,"mtime":1636137294110,"results":"29","hashOfConfig":"27"},{"size":5747,"mtime":1636138240555,"results":"30","hashOfConfig":"27"},{"size":10653,"mtime":1636144118823,"results":"31","hashOfConfig":"27"},{"size":3166,"mtime":1636130603553,"results":"32","hashOfConfig":"27"},{"size":4348,"mtime":1636144719674,"results":"33","hashOfConfig":"27"},{"size":609,"mtime":1636069366391,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"l1zj6r",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6rjgm6",{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\index.js",[],["71","72"],"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\App.js",[],"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx",[],"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaDois.jsx",["73"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TelaUm from './TelaUm';\r\nimport TelaTres from './TelaTres';\r\nimport '../CSS/TelaStyle.css';\r\nimport '../CSS/styleMui.css';\r\n\r\nfunction TelaDois({ aoEnviar }) {\r\n    \r\n    const [dados, setDados] = useState({\r\n        linkedin: '',\r\n        github: '',\r\n      })\r\n    \r\n      //* Salvar os dados do localStorage *//\r\n    \r\n      useEffect(() => {\r\n        if (localStorage.getItem('github') !== null) {\r\n          setDados({\r\n            ...dados,\r\n            linkedin: localStorage.getItem('linkedin'),\r\n            github: localStorage.getItem('github'),\r\n          })\r\n        }\r\n      }, [])\r\n\r\n    let linkUm = { TelaUm };\r\n    let linkDois = { TelaDois };\r\n    let linkTres = { TelaTres };\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"title\">Team Sign Up</h1>\r\n                <nav className=\"navegacao\">\r\n                    <ul>\r\n                        <li ><a href={linkUm}>Basic</a></li>\r\n                        <li className=\"active\"><a href={linkDois}>Social</a></li>\r\n                        <li><a href={linkTres}>Certificates</a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <form\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    aoEnviar();\r\n                    localStorage.setItem('linkedin', dados.linkedin);\r\n                    localStorage.setItem('github', dados.github);\r\n                    \r\n                }}>\r\n                <label for=\"linkedin\" className=\"text\">Linkedin</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"linkedin\"\r\n                    className=\"inputMax\"\r\n                    placeholder=\"https://www.linkedin.com/in/foo-bar-3a0560104/\"\r\n                    value={dados.linkedin}\r\n                    name=\"linkedin\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, linkedin: event.target.value })\r\n                    }}\r\n                />\r\n                <label for=\"github\" className=\"text\">Github *</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"github\"\r\n                    className=\"inputMax\"\r\n                    required\r\n                    placeholder=\"https://github.com/foobar\"\r\n                    value={dados.github}\r\n                    name=\"github\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, github: event.target.value })\r\n                    }} />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    width=\"sm\"\r\n                    className=\"styleBtn\"\r\n                    sx={{\r\n                        display: 'block',\r\n                        marginTop: 4,\r\n                        marginLeft: 55,\r\n                    }}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\nexport default TelaDois;","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaTres.jsx",[],"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaUm.jsx",["74"],"C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\Pages\\TelaSucess.jsx",["75"],"import React, { useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TelaUm from './TelaUm';\r\nimport '../CSS/Sucess.css';\r\nimport '../CSS/styleMui.css';\r\n\r\n\r\nfunction TelaSucess({ aoEnviar }) {\r\n    const [dados, setDados] = useState(\"\");\r\n    let linkUm = {TelaUm};\r\n\r\n    useEffect(() => {\r\n        let dados = {\r\n            fullName: localStorage.getItem('nome'),\r\n            nickname: localStorage.getItem('nickname'),\r\n            email: localStorage.getItem('email'),\r\n            phone: localStorage.getItem('tel'),\r\n            linkedin: localStorage.getItem('linkedin'),\r\n            github: localStorage.getItem('github'),\r\n            teamName: localStorage.getItem('teamName'),\r\n            institution: localStorage.getItem('institution'),\r\n            graduation: localStorage.getItem('graduation'),\r\n            day: localStorage.getItem('dia'),\r\n            month: localStorage.getItem('mes'),\r\n            year: localStorage.getItem('ano'),\r\n        }\r\n        setDados(dados)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"align\" style={{ position: 'relative', height: '700px' }}>\r\n            <h1 className=\"title\">Registered Data</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"negrito\">Fields</th>\r\n                        <th className=\"negrito\">Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Full Name</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.fullName}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Nickname</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.nickname}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.email}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Phone</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.phone}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Birthday</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">\r\n                                {dados.day}/{dados.month}/{dados.year}\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Linkedin</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.linkedin}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Github</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.github}</p>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>Team Name</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.teamName}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Institution</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.institution}</p>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graduation</td>\r\n                        <td>\r\n                            <p className=\"Sucess\">{dados.graduation}</p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                width=\"sm\"\r\n                className=\"styleBtn\"\r\n                onClick={() => {\r\n                    console.log('oi');\r\n                    localStorage.clear();\r\n\r\n                    console.log('oi');\r\n                }}\r\n            >\r\n                Ok\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TelaSucess;","C:\\Users\\tammy\\Desktop\\Project-react-cert\\certificates\\src\\Components\\JS\\calculaIdade.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\index.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\App.js",[],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\BaseFormulario.jsx",[],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaTres.jsx",[],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaUm.jsx",["76"],"import React, { useState, useEffect } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport '../CSS/TelaStyle.css';\r\nimport '../CSS/HeaderStyle.css';\r\nimport '../CSS/birthday.css';\r\nimport { Button, Checkbox } from '@material-ui/core';\r\nimport TelaDois from './TelaDois';\r\nimport { calculaIdade } from '../JS/calculaIdade';\r\nimport '../CSS/styleMui.css';\r\n\r\n\r\nfunction TelaUm({ aoEnviar }) {\r\n    const [dados, setDados] = useState({\r\n        nome: '',\r\n        nickname: '',\r\n        email: '',\r\n        tel: '',\r\n        aniver: {\r\n            dia: 0,\r\n            mes: 0,\r\n            ano: 0,\r\n            idade: 0,\r\n        },\r\n        checkbox: false,\r\n    })\r\n\r\n    /*const Age = () => {\r\n        alert('oi');\r\n        console.log(dados.aniver.idade, dados.aniver.dia, dados.aniver.mes, dados.aniver.ano);\r\n        const dia = dados.aniver.dia;\r\n        const mes = dados.aniver.mes;\r\n        const ano = dados.aniver.ano;\r\n        const age = calculaIdade(dia, mes, ano);\r\n        console.log(age);\r\n        setDados.aniver({\r\n            ...dados.aniver,\r\n            idade: age,\r\n        });\r\n    }*/\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('nome') !== null) {\r\n            let aniver = {\r\n                dia: localStorage.getItem('dia'),\r\n                mes: localStorage.getItem('mes'),\r\n                ano: localStorage.getItem('ano'),\r\n            }\r\n\r\n\r\n            setDados({\r\n                ...dados,\r\n                nome: localStorage.getItem('nome'),\r\n                nickname: localStorage.getItem('nickname'),\r\n                email: localStorage.getItem('email'),\r\n                tel: localStorage.getItem('tel'),\r\n                aniver,\r\n                checkbox: localStorage.getItem('checkebox'),\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    let linkUm = { TelaUm };\r\n    let linkDois = { TelaDois };\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"title\">Team Sign Up</h1>\r\n                <nav className=\"navegacao\">\r\n                    <ul>\r\n                        <li className=\"active\"><a href={linkUm}>Basic</a></li>\r\n                        <li><a href={linkDois}>Social</a></li>\r\n                        <li>Certificates</li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <form\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    aoEnviar();\r\n                    console.log(dados.idade);\r\n                    localStorage.setItem('nome', dados.nome);\r\n                    localStorage.setItem('nickname', dados.nickname);\r\n                    localStorage.setItem('tel', dados.tel);\r\n                    localStorage.setItem('email', dados.email);\r\n                    localStorage.setItem('dia', dados.aniver.dia);\r\n                    localStorage.setItem('mes', dados.aniver.mes);\r\n                    localStorage.setItem('ano', dados.aniver.ano);\r\n\r\n                }}>\r\n                <label forHTML=\"nome\" className=\"text\" required>Full Name *</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nome\"\r\n                    className=\"inputMax\"\r\n                    required\r\n                    placeholder=\"Jane Doe\"\r\n                    value={dados.nome}\r\n                    name=\"nome\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, nome: event.target.value })\r\n                    }}\r\n                />\r\n\r\n                <label forHTML=\"nickname\" className=\"text\">Nickname</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nickname\"\r\n                    className=\"inputMax\"\r\n                    placeholder=\"Mariazinha\"\r\n                    value={dados.nickname}\r\n                    name=\"nickname\"\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, nickname: event.target.value })\r\n                    }}\r\n                />\r\n                <div className=\"boxEmailTel box-input\">\r\n                    <div className=\"boxEmail\">\r\n                        <label forHTML=\"inputEmail\" className=\"text\">Email *</label>\r\n                        <input\r\n                            id=\"inputEmail\"\r\n                            type=\"email\"\r\n                            className=\"inputShort\"\r\n                            placeholder=\"mariazinha@email.com\"\r\n                            required\r\n                            value={dados.email}\r\n                            name=\"email\"\r\n                            onChange={(event) => {\r\n                                setDados({ ...dados, email: event.target.value })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxTel\">\r\n                    <label forHTML=\"telefone\" className=\"text align\">Phone</label>\r\n                        <InputMask\r\n                            onBlur={(event) => {\r\n                                setDados({ ...dados, tel: event.target.value })\r\n                            }}\r\n\r\n                            type=\"text\"\r\n                            defaultValue={dados.tel}\r\n                            name='tel'\r\n                            class='inputShort'\r\n                            id='telefone'\r\n                            placeholder='(00) 00000-0000'\r\n                            mask=\"(99) 99999-9999\">\r\n                        </InputMask>\r\n                    </div>\r\n                </div>\r\n                <div className=\"box-Bday box-input\">\r\n                    <h3 className=\"pbirth\">Birthday *</h3>\r\n                    <div className=\"boxdia\">\r\n                        <label className=\"text\" forHTML=\"dia\">Day</label>\r\n                        <input\r\n                            id=\"dia\"\r\n                            min=\"01\" max=\"31\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{2}\"\r\n                            placeholder=\"01\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.aniver.dia}\r\n                            onChange={(event) => {\r\n                                let aniver = dados.aniver\r\n                                aniver.dia = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxmes\">\r\n                        <label forHTML=\"mes\" className=\"text\">Month</label>\r\n                        <input\r\n                            id=\"mes\"\r\n                            min=\"01\" max=\"12\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{2}\"\r\n                            placeholder=\"01\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.aniver.mes}\r\n                            name=\"nome\"\r\n                            onChange={(event) => {\r\n\r\n                                let aniver = dados.aniver\r\n                                aniver.mes = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxano\">\r\n                        <label forHTML=\"ano\" className=\"text\">Year</label>\r\n                        <input\r\n                            id=\"ano\"\r\n                            min=\"1800\" max=\"2021\"\r\n                            type=\"number\"\r\n                            pattern=\"[0-9]{4}\"\r\n                            placeholder=\"1800\"\r\n                            className=\"inputBday\"\r\n                            required\r\n                            value={dados.ano}\r\n                            name=\"ano\"\r\n                            onChange={(event) => {\r\n\r\n                                let aniver = dados.aniver\r\n                                aniver.ano = event.target.value\r\n                                setDados({ ...dados, aniver })\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"boxage\">\r\n                        <label forHTML=\"age\" className=\"text\">Age</label>\r\n                        <input\r\n                            id=\"age\"\r\n                            min=\"0\" max=\"200\"\r\n                            type=\"number\"\r\n                            className=\"inputBday\"\r\n                            disabled\r\n                            name=\"idade\"\r\n                            onClick= {(event)=> {\r\n                                console.log('oi');\r\n                                const dia = dados.aniver.dia;\r\n                                const mes = dados.aniver.mes;\r\n                                const ano = dados.aniver.ano;\r\n                                const age = calculaIdade(dia,mes,ano);\r\n                                console.log(age);\r\n                                setDados.aniver({\r\n                                    ...dados.aniver,\r\n                                    idade: age,\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Checkbox\r\n                    id=\"checked\"\r\n                    sx={{\r\n                        marginRight: 3,\r\n                        '& .MuiSvgIcon-root': { fontSize: 28 }\r\n                    }}\r\n                    className=\"styleCheck\"\r\n                    required\r\n                    value={dados.checkbox}\r\n                    onChange={(event) => {\r\n                        setDados({ ...dados, checkbox: event.target.value })\r\n                    }}\r\n                    name=\"checkbox\"\r\n\r\n                />\r\n                <label forHTML=\"checked\" className=\"textCB\">I accept the terms and privacy.</label>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    width=\"sm\"\r\n                    className=\"styleBtn\"\r\n                    sx={{\r\n                        display: 'block',\r\n                        marginTop: 4,\r\n                        marginLeft: 55,\r\n                        '& .MuiSvgIcon-NavigateNext': { fontSize: 5 }\r\n                    }}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TelaUm;","C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaDois.jsx",["77"],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\Pages\\TelaSucess.jsx",["78"],"C:\\Users\\tammy\\Documents\\GitHub\\project-react-certificates\\certificates\\src\\Components\\JS\\calculaIdade.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":10,"nodeType":"85","endLine":25,"endColumn":12,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"84","line":60,"column":8,"nodeType":"85","endLine":60,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":10,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":60,"column":8,"nodeType":"85","endLine":60,"endColumn":10,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":10,"nodeType":"85","endLine":25,"endColumn":12,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":10,"endColumn":15},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dados'. Either include it or remove the dependency array. You can also do a functional update 'setDados(d => ...)' if you only need 'dados' in the 'setDados' call.","ArrayExpression",["96"],["97"],"no-unused-vars","'linkUm' is assigned a value but never used.","Identifier","unusedVar",["98"],["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"100","fix":"102"},{"desc":"100","fix":"103"},{"desc":"100","fix":"104"},"Update the dependencies array to be: [dados]",{"range":"105","text":"106"},{"range":"107","text":"106"},{"range":"108","text":"106"},{"range":"109","text":"106"},[697,699],"[dados]",[1793,1795],[1793,1795],[697,699]]